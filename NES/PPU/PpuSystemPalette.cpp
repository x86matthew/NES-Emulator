#include "..\NES.h"

SystemPaletteEntryStruct gSystemPalette[SYSTEM_PALETTE_COLOUR_COUNT] =
{
	{ 0x62, 0x62, 0x62 },
	{ 0x00, 0x2E, 0x98 },
	{ 0x0C, 0x11, 0xC2 },
	{ 0x3B, 0x00, 0xC2 },
	{ 0x65, 0x00, 0x98 },
	{ 0x7D, 0x00, 0x4E },
	{ 0x7D, 0x00, 0x00 },
	{ 0x65, 0x19, 0x00 },
	{ 0x3B, 0x36, 0x00 },
	{ 0x0C, 0x4F, 0x00 },
	{ 0x00, 0x5B, 0x00 },
	{ 0x00, 0x59, 0x00 },
	{ 0x00, 0x49, 0x4E },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0xAB, 0xAB, 0xAB },
	{ 0x00, 0x64, 0xF4 },
	{ 0x35, 0x3C, 0xFF },
	{ 0x76, 0x1B, 0xFF },
	{ 0xAE, 0x0A, 0xF4 },
	{ 0xCF, 0x0C, 0x8F },
	{ 0xCF, 0x23, 0x1C },
	{ 0xAE, 0x47, 0x00 },
	{ 0x76, 0x6F, 0x00 },
	{ 0x35, 0x90, 0x00 },
	{ 0x00, 0xA1, 0x00 },
	{ 0x00, 0x9E, 0x1C },
	{ 0x00, 0x88, 0x8F },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0xFF, 0xFF, 0xFF },
	{ 0x4A, 0xB5, 0xFF },
	{ 0x85, 0x8C, 0xFF },
	{ 0xC8, 0x6A, 0xFF },
	{ 0xFF, 0x58, 0xFF },
	{ 0xFF, 0x5B, 0xE2 },
	{ 0xFF, 0x72, 0x6A },
	{ 0xFF, 0x97, 0x02 },
	{ 0xC8, 0xC1, 0x00 },
	{ 0x85, 0xE3, 0x00 },
	{ 0x4A, 0xF5, 0x02 },
	{ 0x29, 0xF2, 0x6A },
	{ 0x29, 0xDB, 0xE2 },
	{ 0x4E, 0x4E, 0x4E },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0xFF, 0xFF, 0xFF },
	{ 0xB6, 0xE1, 0xFF },
	{ 0xCE, 0xD1, 0xFF },
	{ 0xE9, 0xC3, 0xFF },
	{ 0xFF, 0xBC, 0xFF },
	{ 0xFF, 0xBD, 0xF4 },
	{ 0xFF, 0xC6, 0xC3 },
	{ 0xFF, 0xD5, 0x9A },
	{ 0xE9, 0xE6, 0x81 },
	{ 0xCE, 0xF4, 0x81 },
	{ 0xB6, 0xFB, 0x9A },
	{ 0xA9, 0xFA, 0xC3 },
	{ 0xA9, 0xF0, 0xF4 },
	{ 0xB8, 0xB8, 0xB8 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 }
};

SystemPaletteEntryStruct *GetSystemColourFromPalette(BYTE bPaletteIndex, BYTE bPaletteEntryIndex)
{
	WORD wPaletteEntryAddress = 0;
	BYTE bSystemColourIndex = 0;

	// get colour palette entry address
	wPaletteEntryAddress = 0x3F00 + (bPaletteIndex * 4) + bPaletteEntryIndex;

	// get pixel colour index from system palette
	PpuMemory_Read8(wPaletteEntryAddress, &bSystemColourIndex);
	if(bSystemColourIndex >= SYSTEM_PALETTE_COLOUR_COUNT)
	{
		// invalid colour index
		return NULL;
	}

	// check if greyscale mode is enabled
	if(PpuMaskFlag_Get(PPU_MASK_FLAG_GREYSCALE) != 0)
	{
		// convert colour index to greyscale
		bSystemColourIndex &= 0x30;
	}

	return &gSystemPalette[bSystemColourIndex];
}
